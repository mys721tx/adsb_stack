name: adsb
services:
  dump978:
    image: ghcr.io/sdr-enthusiasts/docker-dump978:latest
    container_name: dump978
    restart: always
    device_cgroup_rules:
      - 'c 189:* rwm'
    env_file: /etc/adsb/.env
    environment:
      - TZ=${FEEDER_TZ}
      - LAT=${FEEDER_LAT}
      - LON=${FEEDER_LONG}
      - DUMP978_RTLSDR_DEVICE=${UAT_SDR_SERIAL}
      - DUMP978_SDR_GAIN=${UAT_SDR_GAIN}
      - DUMP978_SDR_PPM=${UAT_SDR_PPM}
      - DUMP978_AUTOGAIN_INITIAL_GAIN=${UAT_SDR_INITIAL_GAIN}
    volumes:
      - /var/lib/adsb/dump978:/var/globe_history
      - /dev:/dev:ro
    ports:
      - 30980:80
    tmpfs:
      - /run:exec,size=64M
      - /tmp:size=64M
      - /var/log:size=32M
  ultrafeeder:
  # ultrafeeder combines a number of functions:
  # - it retrieves and decodes 1090MHz Mode A/C/S data from the SDR(s) using Wiedehopf's branch of readsb
  # - it implements a `tar1090` based map on port 80 (mapped to port 8080 on the host)
  # - it includes graph1090 (system statistics website) on http://xxxxx/graphs1090
  # - it sends ADSB data directly (without the need of additional containers) to the
  #   "new" aggregators, and, if desired, also to ADSBExchange
  # - it includes mlat-client to send MLAT data to these aggregators
  # - it includes an MLAT Hub to consolidate MLAT results and make them available to the built-in map and other services

    image: ghcr.io/sdr-enthusiasts/docker-adsb-ultrafeeder
    container_name: ultrafeeder
    depends_on:
      - dump978
    hostname: ultrafeeder
    restart: always
    device_cgroup_rules:
      - 'c 189:* rwm'
    ports:
      - 8080:80               # to expose the web interface
    extra_hosts:
      - "host-gateway:host-gateway"
    env_file: /etc/adsb/.env
    environment:
      # --------------------------------------------------
      # general parameters:
      - LOGLEVEL=error
      - TZ=${FEEDER_TZ}
      # --------------------------------------------------
      # SDR related parameters:
      - READSB_DEVICE_TYPE=rtlsdr
      - READSB_RTLSDR_DEVICE=${ADSB_SDR_SERIAL}
      - READSB_RTLSDR_PPM=${ADSB_SDR_PPM}
      #
      # --------------------------------------------------
      # readsb/decoder parameters:
      - READSB_LAT=${FEEDER_LAT}
      - READSB_LON=${FEEDER_LONG}
      - READSB_ALT=${FEEDER_ALT_M}m
      - READSB_RX_LOCATION_ACCURACY=2
      - READSB_STATS_RANGE=true
      #
      # --------------------------------------------------
      # Sources and Aggregator connections:
      # Note - remove the ones you are not using / feeding
      # Make sure that each line ends with a semicolon ";"
      # if you are not using dump978, feel free to remove the first line
      - ULTRAFEEDER_CONFIG=
          adsb,dump978,30978,uat_in;
          adsb,feed.adsb.fi,30004,beast_reduce_plus_out,uuid=${ADSBFI_UUID};
          adsb,in.adsb.lol,30004,beast_reduce_plus_out,uuid=${ADSBLOL_UUID};
          adsb,feed.airplanes.live,30004,beast_reduce_plus_out,uuid=${AIRPLANESLIVE_UUID};
          adsb,feed.planespotters.net,30004,beast_reduce_plus_out,uuid=${PLANESPOTTERS_UUID};
          adsb,feed.theairtraffic.com,30004,beast_reduce_plus_out,uuid=${THEAIRTRAFFIC_UUID};
          adsb,data.avdelphi.com,24999,beast_reduce_plus_out,uuid=${AVDELPHI_UUID};
          adsb,dati.flyitalyadsb.com,4905,beast_reduce_plus_out,uuid=${FLYITALY_UUID};
          adsb,feed1.adsbexchange.com,30004,beast_reduce_plus_out,uuid=${ADSBE_UUID};
          mlat,feed.adsb.fi,31090,uuid=${ADSBFI_UUID};
          mlat,in.adsb.lol,31090,uuid=${ADSBLOL_UUID};
          mlat,feed.airplanes.live,31090,uuid=${AIRPLANESLIVE_UUID};
          mlat,mlat.planespotters.net,31090,uuid=${PLANESPOTTERS_UUID};
          mlat,feed.theairtraffic.com,31090,uuid=${THEAIRTRAFFIC_UUID};
          mlat,dati.flyitalyadsb.com,30100,uuid=${FLYITALY_UUID};
          mlat,feed.adsbexchange.com,31090,uuid=${ADSBE_UUID};
          mlathub,piaware,30105,beast_in,uuid=${PIAWARE_FEEDER_ID};
          mlathub,rbfeeder,30105,beast_in,uuid=${RBFEEDER_UUID};
          mlathub,planewatch,30105,beast_in,uuid=${PLANEWATCH_UUID};
          gpsd,host-gateway,2947;
      # --------------------------------------------------
      - UUID=${ULTRAFEEDER_UUID}
      - MLAT_USER=${FEEDER_NAME}
      - READSB_FORWARD_MLAT_SBS=true
      #
      # --------------------------------------------------
      # TAR1090 (Map Web Page) parameters:
      - UPDATE_TAR1090=true
      - TAR1090_DEFAULTCENTERLAT=${FEEDER_LAT}
      - TAR1090_DEFAULTCENTERLON=${FEEDER_LONG}
      - TAR1090_MESSAGERATEINTITLE=true
      - TAR1090_PAGETITLE=${FEEDER_NAME}
      - TAR1090_PLANECOUNTINTITLE=true
      - TAR1090_ENABLE_AC_DB=true
      - TAR1090_FLIGHTAWARELINKS=true
      - HEYWHATSTHAT_PANORAMA_ID=${FEEDER_HEYWHATSTHAT_ID}
      - HEYWHATSTHAT_ALTS=${FEEDER_HEYWHATSTHAT_ALTS}
      - TAR1090_SITESHOW=true
      - TAR1090_RANGE_OUTLINE_COLORED_BY_ALTITUDE=true
      - TAR1090_RANGE_OUTLINE_WIDTH=2.0
      - TAR1090_RANGERINGSDISTANCES=50,100,150,200
      - TAR1090_RANGERINGSCOLORS='#1A237E','#0D47A1','#42A5F5','#64B5F6'
      - TAR1090_USEROUTEAPI=true
      #
      # --------------------------------------------------
      # GRAPHS1090 (Decoder and System Status Web Page) parameters:
      - GRAPHS1090_DARKMODE=true
      #
      # --------------------------------------------------
      # GRAPHS1090 (Decoder and System Status Web Page) parameters:
      - ENABLE_978=yes
      - URL_978=http://dump978/skyaware978
    volumes:
      - /var/lib/adsb/ultrafeeder/globe_history:/var/globe_history
      - /var/lib/adsb/ultrafeeder/graphs1090:/var/lib/collectd
      - /proc/diskstats:/proc/diskstats:ro
      - /dev/bus/usb:/dev/bus/usb:rw
    tmpfs:
      - /run:exec,size=256M
      - /tmp:size=128M
      - /var/log:size=32M
  piaware:
    image: ghcr.io/sdr-enthusiasts/docker-piaware:latest
    container_name: piaware
    depends_on:
      - ultrafeeder
    restart: always
    ports:
      - 8081:8080
    env_file: /etc/adsb/.env
    environment:
      - BEASTHOST=ultrafeeder
      - UAT_RECEIVER_TYPE=relay
      - UAT_RECEIVER_HOST=dump978
      - TZ=${FEEDER_TZ}
      - FEEDER_ID=${PIAWARE_FEEDER_ID}
    tmpfs:
      - /run:exec,size=64M
      - /var/log
  fr24:
    image: ghcr.io/sdr-enthusiasts/docker-flightradar24:latest
    container_name: fr24
    depends_on:
      - ultrafeeder
    restart: always
    ports:
      - 8754:8754
    env_file: /etc/adsb/.env
    environment:
      - BEASTHOST=ultrafeeder
      - FR24KEY=${FR24_SHARING_KEY}
      - FR24KEY_UAT=${FR24_SHARING_KEY_UAT}
      - MLAT=yes
    tmpfs:
      - /var/log
  planewatch:
    image: ghcr.io/plane-watch/docker-plane-watch:latest
    container_name: planewatch
    depends_on:
      - ultrafeeder
    restart: always
    env_file: /etc/adsb/.env
    environment:
      - BEASTHOST=ultrafeeder
      - LAT=${FEEDER_LAT}
      - LONG=${FEEDER_LONG}
      - ALT=${FEEDER_ALT_M}m
      - TZ=${FEEDER_TZ}
      - API_KEY=${PW_API_KEY}
    tmpfs:
      - /run:exec,size=64M
      - /var/log
  rbfeeder:
    image: ghcr.io/sdr-enthusiasts/docker-airnavradar:latest
    container_name: rbfeeder
    depends_on:
      - ultrafeeder
    restart: always
    env_file: /etc/adsb/.env
    environment:
      - BEASTHOST=ultrafeeder
      - UAT_RECEIVER_HOST=dump978
      - LAT=${FEEDER_LAT}
      - LONG=${FEEDER_LONG}
      - ALT=${FEEDER_ALT_M}
      - TZ=${FEEDER_TZ}
      - SHARING_KEY=${AIRNAVRADAR_SHARING_KEY}
    tmpfs:
      - /run:exec,size=64M
      - /var/log
  pfclient:
    image: ghcr.io/sdr-enthusiasts/docker-planefinder:latest
    # If you are running on a Raspberry Pi 5, uncomment the below line and comment out the above
    #ghcr.io/sdr-enthusiasts/docker-planefinder:5.0.161_arm64
    container_name: pfclient
    depends_on:
      - ultrafeeder
    restart: always
    ports:
      - 30053:30053
    env_file: /etc/adsb/.env
    environment:
      - TZ=${FEEDER_TZ}
      - BEASTHOST=ultrafeeder
      - LAT=${FEEDER_LAT}
      - LONG=${FEEDER_LONG}
      - SHARECODE=${PLANEFINDER_SHARECODE}
    tmpfs:
      - /run:exec,size=64M
      - /var/log/pfclient
  adsbhub:
    image: ghcr.io/sdr-enthusiasts/docker-adsbhub:latest
    container_name: adsbhub
    depends_on:
      - ultrafeeder
    restart: always
    env_file: /etc/adsb/.env
    environment:
      - TZ=${FEEDER_TZ}
      - SBSHOST=ultrafeeder
      - CLIENTKEY=${ADSBHUB_STATION_KEY}
